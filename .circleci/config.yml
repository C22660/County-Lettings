# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
#
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  python: circleci/python@1.1.0

jobs:
  build:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - python/install-packages:
          pip-dependency-file: requirements.txt
          pkg-manager: pip
      - python/install-packages:
          args: pytest
          pkg-manager: pip
          pypi-cache: false
      - run:
          command: |
            pytest --version
          name: Test
  build-docker-image:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true

      # build and push Docker image
      - run: |
          TAG=0.1.$CIRCLE_BUILD_NUM
          docker build -t County-Lettings:$TAG .
          echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
          docker push County-Lettings:$TAG
  deploy-dev:
    machine: true
    steps:
      - checkout
      - run:
          name: Build and push Docker image to Heroku
          command: |
            sudo curl https://cli-assets.heroku.com/install.sh | sh
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:login
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:push -a oc-lettings-15 web
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:release -a oc-lettings-15 web
workflows:
  main:
    jobs:
      - build
      - build-docker-image:
          context:
            - c22660
            - Context Lettings
      - deploy-dev:
          context:
            - c22660
            - Context Lettings

